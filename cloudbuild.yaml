substitutions:
  _SERVICE: "billing-api"
  _REGION: "europe-west1"
  _REPO: "billing-repo"
  _IMAGE: "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/billing-api"

steps:
  # Build con dos tags
  - name: "gcr.io/cloud-builders/docker"
    args: ["build","-t","${_IMAGE}:${SHORT_SHA}","-t","${_IMAGE}:latest","."]

  # Autenticar docker contra Artifact Registry
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args: ["auth","configure-docker","${_REGION}-docker.pkg.dev","-q"]

  # Push explícito de ambas etiquetas
  - name: "gcr.io/cloud-builders/docker"
    args: ["push","${_IMAGE}:${SHORT_SHA}"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push","${_IMAGE}:latest"]

  # Espera a que :latest esté visible en Artifact Registry
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: bash
    args:
      - -c
      - |
        echo "Esperando a que :latest aparezca en Artifact Registry..."
        for i in {1..10}; do
          gcloud artifacts docker images list "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO}/billing-api" \
            --include-tags --format="value(Tags)" | grep -q latest && break
          sleep 3
        done

  # Deploy a Cloud Run usando :latest
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - run
      - deploy
      - "${_SERVICE}"
      - "--image=${_IMAGE}:latest"
      - "--region=${_REGION}"
      - "--platform=managed"
      - "--project=${PROJECT_ID}"
      - "--quiet"
      # - "--allow-unauthenticated"  # déjalo comentado si usas IAM

images:
  - "${_IMAGE}:${SHORT_SHA}"
  - "${_IMAGE}:latest"
